@model Assortie.Models.Adherent

@{
    ViewBag.Title = "Crée un adhérent";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <header class="card-header">
                    <h4 class="card-title mt-2">Crée un nouvel adhérent</h4>
                </header>
                <article class="card-body">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IdAssociation, "IdAssociation")
                            @Html.DropDownList("IdAssociation", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdAssociation, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-row">
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Nom)
                                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Prenom)
                                @Html.EditorFor(model => model.Prenom, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Prenom, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                        </div>
                        <!-- form-row end.// -->

                        <div class="form-group">
                            @Html.LabelFor(model => model.Matricule)
                            @Html.EditorFor(model => model.Matricule, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Matricule, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-row">
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Email)
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Telephone)
                                @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                        </div>
                        <!-- form-row end.// -->

                        <div class="form-row">
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Login)
                                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Password)
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                        </div>
                        <!-- form-row end.// -->

                        <div class="form-row">
                            <div class="col form-group">
                                @Html.LabelFor(model => model.Responsable)
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Responsable)
                                        @Html.ValidationMessageFor(model => model.Responsable, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <!-- form-group end.// -->

                            <div class="col form-group">
                                @Html.LabelFor(model => model.Solde)
                                @Html.EditorFor(model => model.Solde, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Solde, "", new { @class = "text-danger" })
                            </div>
                            <!-- form-group end.// -->
                        </div>

                        <div class="form-group">
                            <input type="submit" value="Ajouter" class="btn btn-primary" />
                        </div>
                        <!-- form-group// -->
                    </form>
                </article>
                <!-- card-body end .// -->
            </div>
            <!-- card.// -->
        </div>
        <!-- col.//-->
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
